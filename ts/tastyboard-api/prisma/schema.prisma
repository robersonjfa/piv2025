// Prisma schema â€” PostgreSQL com snake_case no banco
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         Int      @id @default(autoincrement()) @map("id")
  name       String   @map("name")
  email      String   @unique @map("email")
  recipes    Recipe[]
  createdAt  DateTime @default(now()) @map("created_at")
  updatedAt  DateTime @updatedAt      @map("updated_at")

  @@map("users")
}

model Category {
  id         Int      @id @default(autoincrement()) @map("id")
  name       String   @unique @map("name")
  recipes    Recipe[]
  createdAt  DateTime @default(now()) @map("created_at")
  updatedAt  DateTime @updatedAt      @map("updated_at")

  @@map("categories")
}

model Recipe {
  id          Int       @id @default(autoincrement()) @map("id")
  title       String    @map("title")
  description String    @map("description")
  imageUrl    String?   @map("image_url")
  videoUrl    String?   @map("video_url")
  ingredients Json      @map("ingredients")
  steps       Json      @map("steps")
  authorId    Int?      @map("author_id")
  categoryId  Int?      @map("category_id")

  author      User?     @relation(fields: [authorId], references: [id], onDelete: SetNull)
  category    Category? @relation(fields: [categoryId], references: [id], onDelete: SetNull)

  createdAt   DateTime  @default(now()) @map("created_at")
  updatedAt   DateTime  @updatedAt      @map("updated_at")

  @@index([authorId], map: "idx_recipe_author")
  @@index([categoryId], map: "idx_recipe_category")
  @@map("recipes")
}
